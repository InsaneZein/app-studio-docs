export default TagModal;
declare class TagModal extends React.Component<any, any, any> {
    constructor(props: any);
    constructor(props: any, context: any);
    handleTabClick: (_event: any, tabIndex: any) => void;
    renderTable: (rows: any, columns: any, pagination: any, loaded: any, filters: any, selected: any, onSelect: any, onUpdateData: any, bulkSelect: any) => JSX.Element;
}
declare namespace TagModal {
    namespace propTypes {
        const tabNames: PropTypes.Requireable<(string | null | undefined)[]>;
        const loaded: PropTypes.Requireable<boolean | (boolean | null | undefined)[]>;
        const title: PropTypes.Requireable<string>;
        const systemName: PropTypes.Requireable<string>;
        const isOpen: PropTypes.Requireable<boolean>;
        const toggleModal: PropTypes.Requireable<(...args: any[]) => any>;
        const rows: PropTypes.Requireable<any[]>;
        const columns: PropTypes.Requireable<any[]>;
        const className: PropTypes.Requireable<string>;
        const tableProps: PropTypes.Requireable<PropTypes.InferProps<{}>>;
        const onSelect: PropTypes.Requireable<((...args: any[]) => any) | (((...args: any[]) => any) | null | undefined)[]>;
        const onUpdateData: PropTypes.Requireable<((...args: any[]) => any) | (((...args: any[]) => any) | null | undefined)[]>;
        const bulkSelect: PropTypes.Requireable<any>;
        const pagination: PropTypes.Requireable<any>;
        const primaryToolbarProps: PropTypes.Requireable<PropTypes.InferProps<{}>>;
        const selected: PropTypes.Requireable<any[]>;
        const children: PropTypes.Requireable<PropTypes.ReactNodeLike>;
        const filters: PropTypes.Requireable<any>;
        const onApply: PropTypes.Requireable<(...args: any[]) => any>;
    }
    namespace defaultProps {
        const loaded_1: boolean;
        export { loaded_1 as loaded };
        const isOpen_1: boolean;
        export { isOpen_1 as isOpen };
        export function toggleModal_1(): undefined;
        export { toggleModal_1 as toggleModal };
        const columns_1: {
            title: string;
        }[];
        export { columns_1 as columns };
        export function onUpdateData_1(): undefined;
        export { onUpdateData_1 as onUpdateData };
        const rows_1: never[];
        export { rows_1 as rows };
        const tableProps_1: {};
        export { tableProps_1 as tableProps };
        export namespace pagination_1 {
            const count: number;
        }
        export { pagination_1 as pagination };
    }
}
import React from "react";
import PropTypes from "prop-types";
