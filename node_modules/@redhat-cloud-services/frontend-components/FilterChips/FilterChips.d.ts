export default FilterChips;
declare function FilterChips({ className, filters, onDelete, deleteTitle, showDeleteButton, onDeleteGroup }: {
    className: any;
    filters: any;
    onDelete: any;
    deleteTitle: any;
    showDeleteButton: any;
    onDeleteGroup: any;
}): JSX.Element;
declare namespace FilterChips {
    namespace propTypes {
        const className: PropTypes.Requireable<string>;
        const filters: PropTypes.Requireable<(PropTypes.InferProps<{
            category: PropTypes.Validator<string>;
            chips: PropTypes.Validator<(PropTypes.InferProps<{
                name: PropTypes.Validator<string>;
                isRead: PropTypes.Requireable<boolean>;
                count: PropTypes.Requireable<number>;
            }> | null | undefined)[]>;
        }> | PropTypes.InferProps<{
            name: PropTypes.Validator<string>;
            isRead: PropTypes.Requireable<boolean>;
            count: PropTypes.Requireable<number>;
        }> | null | undefined)[]>;
        const onDelete: PropTypes.Requireable<(...args: any[]) => any>;
        const onDeleteGroup: PropTypes.Requireable<(...args: any[]) => any>;
        const deleteTitle: PropTypes.Requireable<PropTypes.ReactNodeLike>;
        const showDeleteButton: PropTypes.Requireable<boolean>;
    }
    namespace defaultProps {
        const filters_1: never[];
        export { filters_1 as filters };
        export function onDelete_1(): undefined;
        export { onDelete_1 as onDelete };
        const deleteTitle_1: string;
        export { deleteTitle_1 as deleteTitle };
    }
}
import PropTypes from "prop-types";
