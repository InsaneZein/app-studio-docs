export function overflowActionsMapper(action: any, key: any): JSX.Element;
export function actionPropsGenerator(action: any, key: any): any;
export default Actions;
declare class Actions extends React.Component<any, any, any> {
    constructor(props: any);
    constructor(props: any, context: any);
    toggleOpen: (isOpen: any) => void;
}
declare namespace Actions {
    namespace propTypes {
        export { actionsType as actions };
        export const onSelect: PropTypes.Requireable<(...args: any[]) => any>;
        export { actionsType as overflowActions };
        export const dropdownProps: PropTypes.Requireable<PropTypes.InferProps<{}>>;
        export const kebabToggleProps: PropTypes.Requireable<PropTypes.InferProps<{}>>;
        export const exportConfig: PropTypes.Requireable<PropTypes.InferProps<PropTypes.ValidationMap<any>>>;
    }
    namespace defaultProps {
        export const actions: never[];
        export const overflowActions: never[];
        const dropdownProps_1: {};
        export { dropdownProps_1 as dropdownProps };
        const exportConfig_1: {};
        export { exportConfig_1 as exportConfig };
        export function onSelect_1(): undefined;
        export { onSelect_1 as onSelect };
    }
}
import React from "react";
declare const actionsType: PropTypes.Requireable<(string | number | boolean | {} | PropTypes.ReactElementLike | PropTypes.ReactNodeArray | null | undefined)[]>;
import PropTypes from "prop-types";
