export default Wizard;
declare class Wizard extends React.Component<any, any, any> {
    constructor(props: any);
    constructor(props: any, context: any);
    handleNextModalStep: () => void;
    handlePreviousModalStep: () => void;
    handleOnClose: (submit: any) => void;
    handleKeyPress: (event: any) => void;
}
declare namespace Wizard {
    namespace propTypes {
        const isValidated: PropTypes.Requireable<boolean>;
        const isLarge: PropTypes.Requireable<boolean>;
        const title: PropTypes.Requireable<string>;
        const className: PropTypes.Requireable<string>;
        const confirmAction: PropTypes.Requireable<string>;
        const isOpen: PropTypes.Requireable<any>;
        const content: PropTypes.Requireable<any[]>;
        const onClose: PropTypes.Requireable<(...args: any[]) => any>;
    }
    namespace defaultProps {
        export function onClose_1(f: any): any;
        export { onClose_1 as onClose };
        const isValidated_1: boolean;
        export { isValidated_1 as isValidated };
        const confirmAction_1: string;
        export { confirmAction_1 as confirmAction };
    }
}
import React from "react";
import PropTypes from "prop-types";
