export default Radio;
declare class Radio extends React.Component<any, any, any> {
    constructor(props: any);
    constructor(props: any, context: any);
    onToggle: (isExpanded: any) => void;
    calculateSelected: () => any;
    onSelect: (event: any, selection: any) => void;
}
declare namespace Radio {
    namespace propTypes {
        const onChange: PropTypes.Requireable<(...args: any[]) => any>;
        const value: PropTypes.Requireable<string | PropTypes.InferProps<{
            label: PropTypes.Requireable<PropTypes.ReactNodeLike>;
            value: PropTypes.Requireable<string>;
        }>>;
        const placeholder: PropTypes.Requireable<string>;
        const items: PropTypes.Requireable<(PropTypes.InferProps<{
            value: PropTypes.Requireable<string>;
            label: PropTypes.Requireable<PropTypes.ReactNodeLike>;
            id: PropTypes.Requireable<string>;
            isChecked: PropTypes.Requireable<boolean>;
            onChange: PropTypes.Requireable<(...args: any[]) => any>;
        }> | null | undefined)[]>;
        const isDisabled: PropTypes.Requireable<boolean>;
        const className: PropTypes.Requireable<string>;
    }
    namespace defaultProps {
        const items_1: never[];
        export { items_1 as items };
        export function onChange_1(): undefined;
        export { onChange_1 as onChange };
        const isDisabled_1: boolean;
        export { isDisabled_1 as isDisabled };
    }
}
import React from "react";
import PropTypes from "prop-types";
