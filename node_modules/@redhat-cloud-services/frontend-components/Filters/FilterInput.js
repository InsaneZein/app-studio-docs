"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
var react_1 = __importStar(require("react"));
var react_core_1 = require("@patternfly/react-core");
var FilterInput = function (_a) {
    var addRemoveFilters = _a.addRemoveFilters, _b = _a.param, param = _b === void 0 ? '' : _b, _c = _a.filters, filters = _c === void 0 ? {} : _c, _d = _a.type, type = _d === void 0 ? 'checkbox' : _d, value = _a.value, id = _a.id, label = _a.label;
    var _e = (0, react_1.useState)(false), checked = _e[0], setChecked = _e[1];
    (0, react_1.useEffect)(function () {
        var _a;
        if (type !== 'radio') {
            if (param in filters && ((_a = filters === null || filters === void 0 ? void 0 : filters[param]) === null || _a === void 0 ? void 0 : _a.includes(value))) {
                setChecked(true);
            }
            else {
                setChecked(false);
            }
        }
    }, []);
    var handleChange = function () {
        if (type === 'checkbox') {
            setChecked(!checked);
        }
        addRemoveFilters === null || addRemoveFilters === void 0 ? void 0 : addRemoveFilters(value, param, type, checked);
    };
    if (type !== 'radio') {
        return (react_1.default.createElement(react_core_1.Checkbox, { "aria-label": String(label), id: id, isChecked: checked, label: label, onChange: handleChange, value: value, ouiaId: String(label) }));
    }
    return (react_1.default.createElement(react_core_1.Radio, { isChecked: filters && !!value && !!param && filters[param] === value, "aria-label": String(label), id: id, label: label, name: param, onChange: handleChange, value: value, ouiaId: String(label) }));
};
exports.default = FilterInput;
//# sourceMappingURL=FilterInput.js.map